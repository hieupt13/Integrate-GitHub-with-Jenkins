on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Test action ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: print secrets
      run: |
          echo $DEV_ENV_FILE >> servicekey_googlecloud.json
      shell: bash
      env:
        DEV_ENV_FILE : ${{secrets.SERVICEKEY_GOOGLECLOUD}}
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
       name: DEV_ENV_FILE
       path: servicekey_googlecloud.json
       
    - name: Download Artifact  
      uses: actions/download-artifact@v3
      with:
        name: DEV_ENV_FILE
        path: test2/servicekey_googlecloud.json
    
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: test2/servicekey_googlecloud.json
      
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +%Y%m%d)"
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} 

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: "hieutest"
      run: |
        # Build a docker container and push it to ECR 
        docker build -f Dockerfile2 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
